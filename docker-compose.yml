version: '3'

services:
  api:
    working_dir: /app
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    environment:
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PW=postgres
      - NEW_RELIC_NO_CONFIG_FILE=true
      - NEW_RELIC_LICENSE_KEY=key
      - NEW_RELIC_APP_NAME=node-api
    network_mode: bridge
    ports:
      - 3000:3000
    depends_on:
      - postgres
    links:
      - postgres:postgres
    volumes:
      - .:/app
      - /app/node_modules
    command: yarn start:dev

  postgres:
    image: postgres:alpine
    network_mode: bridge
    restart: always
    environment:
      - DB_USER=postgres
      - DB_PASS=postgres
      - POSTGRES_PASSWORD=postgres

  adminer:
    image: adminer
    network_mode: bridge
    restart: always
    ports:
        - 8081:8080

  # agent:
  #   container_name: newrelic-infra
  #   build:
  #     context: .
  #     dockerfile: newrelic-infra.dockerfile
  #   cap_add:
  #     - SYS_PTRACE
  #   network_mode: bridge
  #   pid: host
  #   privileged: true
  #   volumes:
  #     - "/:/host:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   restart: unless-stopped

#   jenkins:
#     image: jenkins/jenkins:lts-jdk11
#     ports:
#       - 8081:8080
#     volumes:
#       - ./jenkins_home:/var/jenkins_home
# volumes:
#   jenkins_home:
#     external: true